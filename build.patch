diff --git a/examples/BUILD.gn b/examples/BUILD.gn
index 90b867904d..9655c52602 100644
--- a/examples/BUILD.gn
+++ b/examples/BUILD.gn
@@ -22,6 +22,12 @@ group("examples") {
   testonly = true
   deps = []
 
+  if (is_linux) {
+    deps += [
+      ":rtc_gw",
+    ]
+  }
+
   if (is_android) {
     deps += [
       ":AppRTCMobile",
@@ -687,6 +693,55 @@ if (is_linux || is_win) {
     ]
   }
 
+
+# //examples:rtc_gw(//build/toolchain/linux:clang_x64)
+# needs //api:peerconnection_and_implicit_call_api(//build/toolchain/linux:clang_x64)
+
+  rtc_executable("rtc_gw") {
+    testonly = true
+    sources = [
+      "rtc_gw/conductor.cc",
+      "rtc_gw/conductor.h",
+      "rtc_gw/defaults.cc",
+      "rtc_gw/defaults.h",
+      "rtc_gw/audio_device_module.cc",
+      "rtc_gw/audio_device_module.h",
+      "rtc_gw/peer_connection_listener.cc",
+      "rtc_gw/peer_connection_listener.h",
+      "rtc_gw/main.cc",
+    ]
+
+    if (!build_with_chromium && is_clang) {
+      # Suppress warnings from the Chromium Clang plugin (bugs.webrtc.org/163).
+      suppressed_configs += [ "//build/config/clang:find_bad_constructs" ]
+    }
+
+    cflags = []
+    cflags += [ "-Wno-inconsistent-missing-override" ]
+    cflags += [ "-Wno-deprecated-declarations" ]
+    deps = []
+
+    configs += [ ":peerconnection_client_warnings_config" ]
+
+    deps += [
+      "../api:libjingle_peerconnection_test_api",
+#      "../api:peerconnection_and_implicit_call_api",
+      "../api:video_frame_api",
+      "../api/audio_codecs:builtin_audio_decoder_factory",
+      "../api/audio_codecs:builtin_audio_encoder_factory",
+      "../media:rtc_audio_video",
+      "../modules/video_capture:video_capture_module",
+      "../pc:libjingle_peerconnection",
+      "../rtc_base:rtc_base",
+      "../rtc_base:rtc_base_approved",
+      "../rtc_base:rtc_json",
+      "../system_wrappers:field_trial_default",
+      "../system_wrappers:metrics_default",
+      "../system_wrappers:runtime_enabled_features_default",
+      "//third_party/libyuv",
+    ]
+  }
+
   rtc_executable("peerconnection_server") {
     testonly = true
     sources = [
